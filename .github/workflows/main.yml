name: CI/CD Pipeline

on:
  push:
    branches:
      - '*' 
  pull_request:
    branches:
      - '*'  
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Run Docker Compose Tests
        run: |
          docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit
          EXIT_CODE=$(docker-compose -f docker-compose.test.yml ps -q | xargs docker inspect -f '{{ .State.ExitCode }}' | grep -v '^0$' | wc -l | tr -d ' ')
          if [ "$EXIT_CODE" != "0" ]; then
            echo "Tests failed"
            exit 1
          fi

  deploy:
    needs: test
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "DEPLOY_ENV=production" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=development" >> $GITHUB_ENV
          fi

      - name: Deploy to server
        run: |
          echo "Deploying to ${{ env.DEPLOY_ENV }} environment"
          if [[ ${{ env.DEPLOY_ENV }} == 'production' ]]; then
            sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no jacob@23.123.211.20 << 'EOF'
            # Stop the current instance (if any)
            screen -S food -X quit || true

            # Pull the latest code
            cd ./food-project

            # Build the project
            bash start.sh
            
            EOF
          else
            sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no jacob@23.123.211.20 << 'EOF'
            # Stop the current instance (if any)
            screen -S food-dev -X quit || true

            # Pull the latest code
            cd ./food-project-dev

            # Build the project
            bash start.sh
            
            EOF
